-- tables should be created in an order. if table a references table b then b should be created first.

-- If you need auto increment use IDENTITY (1, 1) in the attribute i.e., auto increment starting from 1 by 1. See Employer table.

-- I have used the attributes names in such a way that it is not a keyword

-- Data Type: http://msdn.microsoft.com/en-us/library/ms187752.aspx
-- CREATE TABLE: http://msdn.microsoft.com/en-us/library/ms174979.aspx
-- SELECT: http://msdn.microsoft.com/en-us/library/ms189499.aspx
-- SELECT Tutorial: http://www.sql-server-business-intelligence.com/sql-server/sql-tutorial/sql-tutorial-for-beginners-with-examples-and-sql-tutorial-pdf

-- Generated by Oracle SQL Developer Data Modeler 3.1.3.709
--   at:        2012-11-14 22:57:30 EST
--   site:      SQL Server 2005
--   type:      SQL Server 2005

USE [jashdown] -- change it to your id

CREATE TABLE AnonVoting 
    (
     ID INTEGER NOT NULL IDENTITY (1,1), 
     DiscItem_Title VARCHAR (30) NOT NULL , 
     DiscItem_Meeting_Comm_CommOwn_ID INTEGER NOT NULL , 
     DiscItem_Meeting_DateTime DATETIME NOT NULL , 
     DiscItem_Meeting_Comm_ID INTEGER NOT NULL , 
     Vote VARCHAR (20) NOT NULL , 
     CONSTRAINT AnonVoting_PK PRIMARY KEY CLUSTERED (ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE AuditLog 
    (
     ID INTEGER NOT NULL IDENTITY (1,1), 
     Action VARCHAR (25) NOT NULL , 
     ActionDateTime DATETIME NOT NULL , 
     ActionDescription TEXT , 
     SysUser_Email VARCHAR (50) NOT NULL , 
     CONSTRAINT AuditLog_PK PRIMARY KEY CLUSTERED (ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE Campus 
    (
     University_Code VARCHAR (5) NOT NULL , 
     Code VARCHAR (5) NOT NULL , 
     Name VARCHAR (30) NOT NULL , 
     Address VARCHAR (100) NOT NULL , 
     Phone VARCHAR (14) , 
     CommOwn_ID INTEGER NOT NULL , 
     Employer_ID INTEGER NOT NULL , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     CONSTRAINT Campus_PK PRIMARY KEY CLUSTERED (Code, University_Code)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE Category 
    (
     Type VARCHAR (20) NOT NULL , 
     Description VARCHAR (250) , 
     CONSTRAINT Category_PK PRIMARY KEY CLUSTERED (Type)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE Comm 
    (
     CommOwn_ID INTEGER NOT NULL , 
     ID INTEGER NOT NULL IDENTITY (1,1), 
     Name VARCHAR (30) NOT NULL , 
     EffectiveDate DATETIME NOT NULL, 
     MinMembers INTEGER , 
     MaxMembers INTEGER , 
     MembershipYears INTEGER , 
     Type VARCHAR (15) NOT NULL , 
     IsListedPublicly CHAR (1) , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     CreationComments TEXT , 
     IsArchived CHAR (1) , 
     ArchivedBy VARCHAR (50) , 
     ArchivedDate DATETIME , 
     ArchivedComments TEXT , 
     CONSTRAINT Comm_PK PRIMARY KEY CLUSTERED (CommOwn_ID, ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE CommCharge 
    (
     Comm_CommOwn_ID INTEGER NOT NULL , 
     Comm_ID INTEGER NOT NULL , 
     EffectiveDate DATETIME NOT NULL , 
     Charges TEXT NOT NULL , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     CONSTRAINT CommCharge_PK PRIMARY KEY CLUSTERED (EffectiveDate, Comm_CommOwn_ID, Comm_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE CommConstitution 
    (
     Comm_CommOwn_ID INTEGER NOT NULL , 
     Comm_ID INTEGER NOT NULL , 
     EffectiveDate DATETIME NOT NULL , 
     Constitution TEXT NOT NULL , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     CONSTRAINT CommConstitution_PK PRIMARY KEY CLUSTERED (EffectiveDate, Comm_CommOwn_ID, Comm_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE CommDocument 
    (
     Comm_CommOwn_ID INTEGER NOT NULL , 
     Comm_ID INTEGER NOT NULL , 
     Title VARCHAR (30) NOT NULL , 
     DisplayDate DATETIME NOT NULL , 
     Tags VARCHAR (100) , 
     Filename VARCHAR (30) NOT NULL , 
     FileImage IMAGE NOT NULL , 
     Category VARCHAR (20) NOT NULL , 
     IsPublic CHAR (1) NOT NULL , 
     IsProtected CHAR (1) NOT NULL , 
     UploadedBy VARCHAR (50) NOT NULL , 
     UploadedDate DATETIME NOT NULL , 
     IsArchived CHAR (1) NOT NULL , 
     ArchivedBy VARCHAR (50) , 
     ArchivedDate DATETIME , 
     CONSTRAINT CommDocument_PK PRIMARY KEY CLUSTERED (Title, Comm_CommOwn_ID, Comm_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE CommMember 
    (
     Comm_CommOwn_ID INTEGER NOT NULL , 
     Comm_ID INTEGER NOT NULL , 
     Member_Email VARCHAR (50) NOT NULL , 
     IsAdministrator CHAR (1) NOT NULL , 
     IsConvener CHAR (1) , 
     MemberRole_Role VARCHAR (50) NOT NULL , 
     "Voting/Non-Voting" VARCHAR (10) NOT NULL , 
     Representing INTEGER , 
     StartDate DATETIME NOT NULL , 
     EndDate DATETIME NOT NULL , 
     LastAssignedBy VARCHAR (50) NOT NULL , 
     LastAssignedDate DATETIME NOT NULL , 
     CONSTRAINT CommMember_PK PRIMARY KEY CLUSTERED (Member_Email, Comm_CommOwn_ID, Comm_ID, StartDate)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE CommOwn 
    (
     ID INTEGER NOT NULL IDENTITY (1,1), 
     CONSTRAINT CommOwn_PK PRIMARY KEY CLUSTERED (ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE CommSuperAdmin 
    (
     SysUser_Email VARCHAR (50) NOT NULL , 
     CommOwn_ID INTEGER NOT NULL , 
     StartDate DATETIME NOT NULL , 
     EndDate DATETIME , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     CONSTRAINT CommSuperAdmin_PK PRIMARY KEY CLUSTERED (SysUser_Email, CommOwn_ID, StartDate)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE DiscItem 
    (
     Meeting_Comm_CommOwn_ID INTEGER NOT NULL , 
     Meeting_Comm_ID INTEGER NOT NULL , 
     Meeting_DateTime DATETIME NOT NULL , 
     Title VARCHAR (30) NOT NULL , 
     Description VARCHAR (80) , 
     Decision VARCHAR (20) , 
     DueDate DATETIME NOT NULL , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     IsVoted CHAR (1) NOT NULL , 
     IsAnonVoting CHAR (1) NOT NULL , 
     IsArchived CHAR (1) , 
     IsRead CHAR (1) NOT NULL , 
     CONSTRAINT DiscItem_PK PRIMARY KEY CLUSTERED (Title, Meeting_Comm_CommOwn_ID, Meeting_DateTime, Meeting_Comm_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE DiscItemDocument 
    (
     DiscItem_Meeting_Comm_CommOwn_ID INTEGER NOT NULL , 
     DiscItem_Meeting_Comm_ID INTEGER NOT NULL , 
     DiscItem_Meeting_DateTime DATETIME NOT NULL , 
     DiscItem_Title VARCHAR (30) NOT NULL , 
     Filename VARCHAR (30) NOT NULL , 
     FileImage IMAGE , 
     Tags VARCHAR (100) , 
     CONSTRAINT DiscItemDocument_PK PRIMARY KEY CLUSTERED (DiscItem_Title, DiscItem_Meeting_Comm_CommOwn_ID, DiscItem_Meeting_DateTime, DiscItem_Meeting_Comm_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE DiscItemVoteType 
    (
     DiscItem_Title VARCHAR (30) NOT NULL , 
     DiscItem_Meeting_Comm_CommOwn_ID INTEGER NOT NULL , 
     DiscItem_Meeting_DateTime DATETIME NOT NULL , 
     DiscItem_Meeting_Comm_ID INTEGER NOT NULL , 
     VoteType_Type VARCHAR (20) NOT NULL , 
     CONSTRAINT DiscItemVoteType_PK PRIMARY KEY CLUSTERED (DiscItem_Title, DiscItem_Meeting_Comm_CommOwn_ID, DiscItem_Meeting_DateTime, DiscItem_Meeting_Comm_ID, VoteType_Type)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE Discussion 
    (
     DiscItem_Meeting_Comm_ID INTEGER NOT NULL , 
     DiscItem_Meeting_Comm_CommOwn_ID INTEGER NOT NULL , 
     DiscItem_Meeting_DateTime DATETIME NOT NULL , 
     DiscItem_Title VARCHAR (30) NOT NULL , 
     SysUser_Email VARCHAR (50) NOT NULL , 
     ActionDateTime DATETIME NOT NULL , 
     Comment TEXT , 
     HasRead CHAR (1) , 
     HasVoted CHAR (1) , 
     Vote VARCHAR (20) , 
     CONSTRAINT Discuss_PK PRIMARY KEY CLUSTERED (SysUser_Email, DiscItem_Title, DiscItem_Meeting_Comm_CommOwn_ID, DiscItem_Meeting_DateTime, DiscItem_Meeting_Comm_ID, ActionDateTime)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE Employer 
    (
     ID INTEGER NOT NULL IDENTITY (1, 1), /* auto increment starting from 1 by 1.*/
     CONSTRAINT Employer_PK PRIMARY KEY CLUSTERED (ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE Meeting 
    (
     Comm_CommOwn_ID INTEGER NOT NULL , 
     Comm_ID INTEGER NOT NULL , 
     DateTime DATETIME NOT NULL , 
     Location VARCHAR (30) NOT NULL , 
     IsListedPublicly CHAR (1) , 
     FinalAgenda TEXT , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     CONSTRAINT Meeting_PK PRIMARY KEY CLUSTERED (DateTime, Comm_CommOwn_ID, Comm_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE MemberRole 
    (
     Role VARCHAR (50) NOT NULL , 
     Description TEXT , 
     CONSTRAINT MemberRole_PK PRIMARY KEY CLUSTERED (Role)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 


GO
EXEC sys.sp_addextendedproperty 
@name = N'MS_DescriptionExample' , 
@value = N'Convener Chair Co-Chair Member Ex-Officio Student etc.' , 
@level0type = N'SCHEMA', @level0name = N'dbo', 
@level1type = N'TABLE' , @level1name = N'MemberRole' , 
@level2type = N'COLUMN' , @level2name = N'Description' 
GO


CREATE TABLE School 
    (
     Campus_University_Code VARCHAR (5) NOT NULL , 
     Campus_Code VARCHAR (5) NOT NULL , 
     Code VARCHAR (5) NOT NULL , 
     Name VARCHAR (30) NOT NULL , 
     Address VARCHAR (100) NOT NULL , 
     Phone VARCHAR (14) , 
     CommOwn_ID INTEGER NOT NULL , 
     Employer_ID INTEGER NOT NULL , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     CONSTRAINT School_PK PRIMARY KEY CLUSTERED (Campus_University_Code, Code, Campus_Code)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE SysUser 
    (
     Email VARCHAR (50) NOT NULL , 
     FirstName VARCHAR (30) NOT NULL , 
     LastName VARCHAR (30) NOT NULL , 
     Phone VARCHAR (14) , 
     OfficeInfo VARCHAR (20) NOT NULL , 
     FacultyFlag CHAR (1) NOT NULL , 
     FacultyRank VARCHAR (15) , 
     StaffFlag CHAR (1) NOT NULL , 
     StaffPosition VARCHAR (15) , 
     StudentFlag CHAR (1) NOT NULL , 
     IsITAdministrator CHAR (1) , 
     Employer_ID INTEGER , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     CONSTRAINT SysUser_PK PRIMARY KEY CLUSTERED (Email)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE Unit 
    (
     Campus_University_Code VARCHAR (5) NOT NULL , 
     Campus_Code VARCHAR (5) NOT NULL , 
     Code VARCHAR (5) NOT NULL , 
     Name VARCHAR (30) NOT NULL , 
     Address VARCHAR (100) NOT NULL , 
     Phone VARCHAR (14) , 
     CommOwn_ID INTEGER NOT NULL , 
     Employer_ID INTEGER NOT NULL , 
     School_Campus_University_Code VARCHAR (5) , 
     School_Campus_Code VARCHAR (5) , 
     School_Code VARCHAR (5) , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     CONSTRAINT Unit_PK PRIMARY KEY CLUSTERED (Code, Campus_University_Code, Campus_Code)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE University 
    (
     Code VARCHAR (5) NOT NULL , 
     Name VARCHAR (30) NOT NULL , 
     Address VARCHAR (100) NOT NULL , 
     Phone VARCHAR (14) , 
     CommOwn_ID INTEGER NOT NULL , 
     CreatedBy VARCHAR (50) NOT NULL , 
     CreatedDate DATETIME NOT NULL , 
     CONSTRAINT University_PK PRIMARY KEY CLUSTERED (Code)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 

    



CREATE TABLE VoteType 
    (
     Type VARCHAR (20) NOT NULL , 
     Description TEXT , 
     CONSTRAINT VoteType_PK PRIMARY KEY CLUSTERED (Type)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
     ON "default" 
    )
    ON "default"
GO 





ALTER TABLE AnonVoting 
    ADD CONSTRAINT AnonVoting_DiscItem_FK FOREIGN KEY 
    ( 
     DiscItem_Title, 
     DiscItem_Meeting_Comm_CommOwn_ID, 
     DiscItem_Meeting_DateTime, 
     DiscItem_Meeting_Comm_ID
    ) 
    REFERENCES DiscItem 
    ( 
     Title , 
     Meeting_Comm_CommOwn_ID , 
     Meeting_DateTime , 
     Meeting_Comm_ID 
    ) 
    ON DELETE CASCADE
    ON UPDATE NO ACTION 
GO 



ALTER TABLE AuditLog 
    ADD CONSTRAINT AuditLog_SysUser_FK FOREIGN KEY 
    ( 
     SysUser_Email
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Campus 
    ADD CONSTRAINT Campus_CommOwn_FK FOREIGN KEY 
    ( 
     CommOwn_ID
    ) 
    REFERENCES CommOwn 
    ( 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Campus 
    ADD CONSTRAINT Campus_Employer_FK FOREIGN KEY 
    ( 
     Employer_ID
    ) 
    REFERENCES Employer 
    ( 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Campus 
    ADD CONSTRAINT Campus_SysUser_FK FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Campus 
    ADD CONSTRAINT Campus_University_FK FOREIGN KEY 
    ( 
     University_Code
    ) 
    REFERENCES University 
    ( 
     Code 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommCharge 
    ADD CONSTRAINT Charges_Committee_FK FOREIGN KEY 
    ( 
     Comm_CommOwn_ID, 
     Comm_ID
    ) 
    REFERENCES Comm 
    ( 
     CommOwn_ID , 
     ID 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommCharge 
    ADD CONSTRAINT CommCharges_SysUser_FK FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommConstitution 
    ADD CONSTRAINT CommConstitution_SysUser_FK FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommDocument 
    ADD CONSTRAINT CommDocument_Category_FK FOREIGN KEY 
    ( 
     Category
    ) 
    REFERENCES Category 
    ( 
     Type 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommDocument 
    ADD CONSTRAINT CommDocument_SysUser_FK FOREIGN KEY 
    ( 
     ArchivedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommMember 
    ADD CONSTRAINT CommMember_CommOwn_FK FOREIGN KEY 
    ( 
     Representing
    ) 
    REFERENCES CommOwn 
    ( 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommMember 
    ADD CONSTRAINT CommMember_CommRole_FK FOREIGN KEY 
    ( 
     MemberRole_Role
    ) 
    REFERENCES MemberRole 
    ( 
     Role 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommMember 
    ADD CONSTRAINT CommMember_Comm_FK FOREIGN KEY 
    ( 
     Comm_CommOwn_ID, 
     Comm_ID
    ) 
    REFERENCES Comm 
    ( 
     CommOwn_ID , 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommMember 
    ADD CONSTRAINT CommMember_SysUser_FK FOREIGN KEY 
    ( 
     LastAssignedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommMember 
    ADD CONSTRAINT CommMember_SysUser_FKv2 FOREIGN KEY 
    ( 
     Member_Email
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Comm 
    ADD CONSTRAINT Comm_CommOwn_FK FOREIGN KEY 
    ( 
     CommOwn_ID
    ) 
    REFERENCES CommOwn 
    ( 
     ID 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Comm 
    ADD CONSTRAINT Comm_SysUser_FK FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Comm 
    ADD CONSTRAINT Comm_SysUser_FKv1 FOREIGN KEY 
    ( 
     ArchivedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommSuperAdmin 
    ADD CONSTRAINT CommitteeSuperAdmin_CommOwn_FK FOREIGN KEY 
    ( 
     CommOwn_ID
    ) 
    REFERENCES CommOwn 
    ( 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommSuperAdmin 
    ADD CONSTRAINT CommitteeSuperAdmin_SysUser_FK FOREIGN KEY 
    ( 
     SysUser_Email
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommSuperAdmin 
    ADD CONSTRAINT CommitteeSuperAdmin_SysUser_FKv2 FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommConstitution 
    ADD CONSTRAINT Constitution_Date_Comm_FK FOREIGN KEY 
    ( 
     Comm_CommOwn_ID, 
     Comm_ID
    ) 
    REFERENCES Comm 
    ( 
     CommOwn_ID , 
     ID 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE DiscItemVoteType 
    ADD CONSTRAINT DiscItemVoteType_DiscItem_FK FOREIGN KEY 
    ( 
     DiscItem_Title, 
     DiscItem_Meeting_Comm_CommOwn_ID, 
     DiscItem_Meeting_DateTime, 
     DiscItem_Meeting_Comm_ID
    ) 
    REFERENCES DiscItem 
    ( 
     Title , 
     Meeting_Comm_CommOwn_ID , 
     Meeting_DateTime , 
     Meeting_Comm_ID 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE DiscItemVoteType 
    ADD CONSTRAINT DiscItemVoteType_VoteType_FK FOREIGN KEY 
    ( 
     VoteType_Type
    ) 
    REFERENCES VoteType 
    ( 
     Type 
    ) 
    ON DELETE CASCADE
    ON UPDATE NO ACTION 
GO 




ALTER TABLE DiscItemDocument 
    ADD CONSTRAINT DiscItems_Documents_DiscItems_FK FOREIGN KEY 
    ( 
     DiscItem_Title, 
     DiscItem_Meeting_Comm_CommOwn_ID, 
     DiscItem_Meeting_DateTime, 
     DiscItem_Meeting_Comm_ID
    ) 
    REFERENCES DiscItem 
    ( 
     Title , 
     Meeting_Comm_CommOwn_ID , 
     Meeting_DateTime , 
     Meeting_Comm_ID 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 

  

ALTER TABLE DiscItem 
    ADD CONSTRAINT DiscItems_Meeting_FK FOREIGN KEY 
    ( 
     Meeting_DateTime, 
     Meeting_Comm_CommOwn_ID, 
     Meeting_Comm_ID
    ) 
    REFERENCES Meeting 
    ( 
     DateTime , 
     Comm_CommOwn_ID , 
     Comm_ID 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE DiscItem 
    ADD CONSTRAINT DiscItems_SysUser_FK FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 

 

ALTER TABLE Discussion 
    ADD CONSTRAINT "Discuss_Discussion Items_FK" FOREIGN KEY 
    ( 
     DiscItem_Title, 
     DiscItem_Meeting_Comm_CommOwn_ID, 
     DiscItem_Meeting_DateTime, 
     DiscItem_Meeting_Comm_ID
    ) 
    REFERENCES DiscItem 
    ( 
     Title , 
     Meeting_Comm_CommOwn_ID , 
     Meeting_DateTime , 
     Meeting_Comm_ID 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Discussion 
    ADD CONSTRAINT Discuss_SysUser_FK FOREIGN KEY 
    ( 
     SysUser_Email
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommDocument 
    ADD CONSTRAINT Documents_Comm_FK FOREIGN KEY 
    ( 
     Comm_CommOwn_ID, 
     Comm_ID
    ) 
    REFERENCES Comm 
    ( 
     CommOwn_ID , 
     ID 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE CommDocument 
    ADD CONSTRAINT Documents_SysUser_FK FOREIGN KEY 
    ( 
     UploadedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 


 

ALTER TABLE Meeting 
    ADD CONSTRAINT Meetings_Comm_FK FOREIGN KEY 
    ( 
     Comm_CommOwn_ID, 
     Comm_ID
    ) 
    REFERENCES Comm 
    ( 
     CommOwn_ID , 
     ID 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Meeting 
    ADD CONSTRAINT Meetings_SysUser_FK FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE School 
    ADD CONSTRAINT School_Campus_FK FOREIGN KEY 
    ( 
     Campus_Code, 
     Campus_University_Code
    ) 
    REFERENCES Campus 
    ( 
     Code , 
     University_Code 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE School 
    ADD CONSTRAINT School_CommOwn_FK FOREIGN KEY 
    ( 
     CommOwn_ID
    ) 
    REFERENCES CommOwn 
    ( 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE School 
    ADD CONSTRAINT School_Employer_FK FOREIGN KEY 
    ( 
     Employer_ID
    ) 
    REFERENCES Employer 
    ( 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE School 
    ADD CONSTRAINT School_SysUser_FK FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE SysUser 
    ADD CONSTRAINT SysUser_Employer_FK FOREIGN KEY 
    ( 
     Employer_ID
    ) 
    REFERENCES Employer 
    ( 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE SysUser 
    ADD CONSTRAINT SysUser_SysUser_FK FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Unit 
    ADD CONSTRAINT Unit_Campus_FK FOREIGN KEY 
    ( 
     Campus_Code, 
     Campus_University_Code
    ) 
    REFERENCES Campus 
    ( 
     Code , 
     University_Code 
    ) 
    ON DELETE CASCADE 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Unit 
    ADD CONSTRAINT Unit_CommOwn_FK FOREIGN KEY 
    ( 
     CommOwn_ID
    ) 
    REFERENCES CommOwn 
    ( 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Unit 
    ADD CONSTRAINT Unit_Employer_FK FOREIGN KEY 
    ( 
     Employer_ID
    ) 
    REFERENCES Employer 
    ( 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Unit 
    ADD CONSTRAINT Unit_School_FK FOREIGN KEY 
    ( 
     School_Campus_University_Code, 
     School_Code, 
     School_Campus_Code
    ) 
    REFERENCES School 
    ( 
     Campus_University_Code , 
     Code , 
     Campus_Code 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE Unit 
    ADD CONSTRAINT Unit_SysUser_FK FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE University 
    ADD CONSTRAINT University_CommOwn_FK FOREIGN KEY 
    ( 
     CommOwn_ID
    ) 
    REFERENCES CommOwn 
    ( 
     ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 



ALTER TABLE University 
    ADD CONSTRAINT University_SysUser_FK FOREIGN KEY 
    ( 
     CreatedBy
    ) 
    REFERENCES SysUser 
    ( 
     Email 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO 


ALTER TABLE DiscItemDocument
ADD ContentType VARCHAR(MAX) NOT NULL
GO

ALTER TABLE CommDocument
ADD ContentType VARCHAR(MAX)
GO
